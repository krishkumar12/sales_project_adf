{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "krishna12adf1"
		},
		"lsstorageadf_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'lsstorageadf'"
		},
		"lsstorageadf_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://salesprojectadf.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/lsstorageadf')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('lsstorageadf_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('lsstorageadf_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dscustomerbadparquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "rejected/customer",
						"fileSystem": "data-raw-bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dscustomercsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "customer",
						"fileSystem": "data-ext-landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "First Name",
						"type": "String"
					},
					{
						"name": "Last Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dscustomercurated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "customer",
						"fileSystem": "data-curated-silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dscustomerstaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "staging/customer",
						"fileSystem": "data-raw-bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsgoldfastmovingproduct')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "fast-moving-product",
						"fileSystem": "data-processed-gold"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsproductcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "product",
						"fileSystem": "data-ext-landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsproductcurated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "product",
						"fileSystem": "data-curated-silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dsproductstaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "staging/product",
						"fileSystem": "data-raw-bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "productid",
						"type": "String"
					},
					{
						"name": "productname",
						"type": "String"
					},
					{
						"name": "productcategory",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dssalescurated')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sales",
						"fileSystem": "data-curated-silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dssalesext')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sales",
						"fileSystem": "data-ext-landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SaleID",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "SaleDate",
						"type": "String"
					},
					{
						"name": "Revenue",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dssalesrawstaging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "staging/sales",
						"fileSystem": "data-raw-bronze"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SaleID",
						"type": "String"
					},
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "ProductID",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "SaleDate",
						"type": "String"
					},
					{
						"name": "Revenue",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dssilverproductparquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "product",
						"fileSystem": "data-curated-silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "productid",
						"type": "UTF8"
					},
					{
						"name": "productname",
						"type": "UTF8"
					},
					{
						"name": "productcategory",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dssilversalesparquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sales",
						"fileSystem": "data-curated-silver"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SaleID",
						"type": "UTF8"
					},
					{
						"name": "CustomerID",
						"type": "UTF8"
					},
					{
						"name": "ProductID",
						"type": "UTF8"
					},
					{
						"name": "Quantity",
						"type": "UTF8"
					},
					{
						"name": "SaleDate",
						"type": "UTF8"
					},
					{
						"name": "Revenue",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dstotalsaleperday')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsstorageadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "total-sale-per-day",
						"fileSystem": "data-processed-gold"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsstorageadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl-copy-ext-to-raw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies data from external to raw folder ",
				"activities": [
					{
						"name": "copy-sales-ext-raw",
						"description": "copy sales from ext landing to raw container",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "sales",
									"wildcardFileName": "sales*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SaleID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SaleID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Quantity",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SaleDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SaleDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Revenue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Revenue",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dssalesext",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dssalesrawstaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "copy-product-ext-raw",
						"description": "copy product from ext landing to raw container",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "copy-sales-ext-raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "data-ext-landing/product/"
							},
							{
								"name": "Destination",
								"value": "data-raw-bronze/staging/product/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "product",
									"wildcardFileName": "product*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "productid",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "productid",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "productname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "productname",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "productcategory",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "productcategory",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dsproductcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dsproductstaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "copy-customer-ext-raw_copy",
						"description": "copy customer from ext landing to raw container",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "copy-product-ext-raw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "data-ext-landing/customer/"
							},
							{
								"name": "Destination",
								"value": "data-raw-bronze/staging/customer/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFolderPath": "customer",
									"wildcardFileName": "customer*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LastName",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dscustomercsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dscustomerstaging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete-sales-ext",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "copy-customer-ext-raw_copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dssalesext",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "delete-product-ext",
						"type": "Delete",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "delete-sales-ext",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dsproductcsv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "delete-customer-raw",
						"type": "Delete",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "delete-product-ext",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "dscustomercsv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": false,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"pipelineid": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "pl-copy-data-ext-to-raw"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dssalesext')]",
				"[concat(variables('factoryId'), '/datasets/dssalesrawstaging')]",
				"[concat(variables('factoryId'), '/datasets/dsproductcsv')]",
				"[concat(variables('factoryId'), '/datasets/dsproductstaging')]",
				"[concat(variables('factoryId'), '/datasets/dscustomercsv')]",
				"[concat(variables('factoryId'), '/datasets/dscustomerstaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfcustomrcurated')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dscustomerstaging",
								"type": "DatasetReference"
							},
							"name": "customerstaging"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dscustomercurated",
								"type": "DatasetReference"
							},
							"name": "sinkgoodrows"
						},
						{
							"dataset": {
								"referenceName": "dscustomerbadparquet",
								"type": "DatasetReference"
							},
							"name": "sinkbadrows"
						}
					],
					"transformations": [
						{
							"name": "distinctcustomer"
						},
						{
							"name": "filtercustomer"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CustomerID as string,",
						"          FirstName as string,",
						"          LastName as string,",
						"          Gender as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     purgeFiles: true) ~> customerstaging",
						"customerstaging aggregate(groupBy(CustomerID),",
						"     FirstName = first(FirstName),",
						"          LastName = first(LastName),",
						"          Gender = first(Gender)) ~> distinctcustomer",
						"derivedColumn1 split(isInteger(CustomerID),",
						"     disjoint: false) ~> filtercustomer@(goodcustomerid, badcustomerid)",
						"distinctcustomer derive(Gender = iif(isNull(Gender),'Unknown Gender',Gender)) ~> derivedColumn1",
						"filtercustomer@goodcustomerid sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkgoodrows",
						"filtercustomer@badcustomerid sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkbadrows"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dscustomerstaging')]",
				"[concat(variables('factoryId'), '/datasets/dscustomercurated')]",
				"[concat(variables('factoryId'), '/datasets/dscustomerbadparquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfgoldfastmovingproduct')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dssilversalesparquet",
								"type": "DatasetReference"
							},
							"name": "srcsilversales"
						},
						{
							"dataset": {
								"referenceName": "dssilverproductparquet",
								"type": "DatasetReference"
							},
							"name": "srcsilverproduct"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsgoldfastmovingproduct",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "joinsalesproduct"
						},
						{
							"name": "select1"
						},
						{
							"name": "aggregate1"
						},
						{
							"name": "sort1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SaleID as string,",
						"          CustomerID as string,",
						"          ProductID as string,",
						"          Quantity as integer,",
						"          SaleDate as date,",
						"          Revenue as decimal(10,0)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet',",
						"     partitionBy('hash', 1)) ~> srcsilversales",
						"source(output(",
						"          productid as string,",
						"          productname as string,",
						"          productcategory as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> srcsilverproduct",
						"srcsilversales, srcsilverproduct join(srcsilversales@ProductID == srcsilverproduct@productid,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     partitionBy('hash', 1),",
						"     broadcast: 'auto')~> joinsalesproduct",
						"joinsalesproduct select(mapColumn(",
						"          ProductID = srcsilversales@ProductID,",
						"          Quantity,",
						"          Revenue,",
						"          productname,",
						"          productcategory",
						"     ),",
						"     partitionBy('hash', 1),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 aggregate(groupBy(ProductID),",
						"     productname = first(productname),",
						"          productcategory = first(productcategory),",
						"          Quantity = sum(Quantity),",
						"          Revenue = sum(Revenue),",
						"     partitionBy('hash', 1)) ~> aggregate1",
						"aggregate1 sort(desc(Revenue, true),",
						"     desc(Quantity, true),",
						"     partitionBy('hash', 1)) ~> sort1",
						"sort1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dssilversalesparquet')]",
				"[concat(variables('factoryId'), '/datasets/dssilverproductparquet')]",
				"[concat(variables('factoryId'), '/datasets/dsgoldfastmovingproduct')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfgoldtotalsaleperday')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dssilversalesparquet",
								"type": "DatasetReference"
							},
							"name": "srcsales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dstotalsaleperday",
								"type": "DatasetReference"
							},
							"name": "sinktotalsaleperday"
						}
					],
					"transformations": [
						{
							"name": "totalsaleperday"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SaleID as string,",
						"          CustomerID as string,",
						"          ProductID as string,",
						"          Quantity as integer,",
						"          SaleDate as date,",
						"          Revenue as decimal(10,0)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet',",
						"     partitionBy('hash', 1)) ~> srcsales",
						"srcsales aggregate(groupBy(SaleDate),",
						"     Revenue = toDecimal(sum(Revenue),8,2)) ~> totalsaleperday",
						"totalsaleperday sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sinktotalsaleperday"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dssilversalesparquet')]",
				"[concat(variables('factoryId'), '/datasets/dstotalsaleperday')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfproductcurated')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dsproductstaging",
								"type": "DatasetReference"
							},
							"name": "productstaging"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dsproductcurated",
								"type": "DatasetReference"
							},
							"name": "sinkproductcurated"
						}
					],
					"transformations": [
						{
							"name": "distinctproduct"
						}
					],
					"scriptLines": [
						"source(output(",
						"          productid as string,",
						"          productname as string,",
						"          productcategory as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     purgeFiles: true) ~> productstaging",
						"productstaging aggregate(groupBy(productid),",
						"     productname = first(productname),",
						"          productcategory = first(productcategory)) ~> distinctproduct",
						"distinctproduct sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sinkproductcurated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dsproductstaging')]",
				"[concat(variables('factoryId'), '/datasets/dsproductcurated')]"
			]
		}
	]
}